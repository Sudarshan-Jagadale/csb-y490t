{"version":3,"sources":["counter/counterSlice.js","counter/ClassBase/CounterClass.js","counter/FunctionBase/Counter.js","App.js","store/store.js","index.js"],"names":["slice","createSlice","name","initialState","value","reducers","increment","state","descrement","addAmount","action","console","log","payload","actions","selectCount","counter","CounterClass","props","add","this","count","dispatch","className","onClick","type","onChange","e","setState","target","Number","Component","connect","Counter","useSelector","useDispatch","useState","setAdd","App","configureStore","reducer","counterReducer","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"0MAEaA,EAAQC,YAAY,CAC/BC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMH,OAAS,GAEjBI,WAAY,SAACD,GACXA,EAAMH,OAAS,GAEjBK,UAAW,SAACF,EAAOG,GACjBC,QAAQC,IAAIF,GACZH,EAAMH,OAASM,EAAOG,YAKrB,EAA6Cb,EAAMc,QAA3CR,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,UACzBM,EAAc,SAACR,GAAD,OAAWA,EAAMS,QAAQZ,OACrCJ,IAAf,Q,OClBMiB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDX,MAAQ,CACXY,IAAK,GAHU,E,0CAMnB,WAAU,IAAD,OACP,EAA4BC,KAAKF,MAAzBG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPH,EAAQC,KAAKb,MAAbY,IACR,OACE,gCACE,sBAAKI,UAAW,MAAhB,UACE,wBAAQA,UAAU,SAASC,QAAS,kBAAMF,EAAShB,MAAnD,eAGA,sBAAMiB,UAAW,cAAjB,SAAiCF,IACjC,wBAAQE,UAAU,SAASC,QAAS,kBAAMF,EAASd,MAAnD,kBAIF,qBAAKe,UAAW,MAAhB,SACE,gCACE,uBACEA,UAAW,aACXE,KAAK,SACLrB,MAAOe,EACPO,SAAU,SAACC,GACT,EAAKC,SAAS,CAAET,IAAKQ,EAAEE,OAAOzB,WAGlC,wBACEmB,UAAW,SACXC,QAAS,kBAAMF,EAASb,EAAUqB,OAAOX,IAAQ,KAFnD,2C,GA/BeY,aAgDZC,eAJS,SAACzB,GAAD,MAAY,CAClCc,MAAOd,EAAMS,QAAQZ,SAGR4B,CAAyBf,G,QCbzBgB,MAnCf,WACE,IAAMZ,EAAQa,YAAYnB,GACpBO,EAAWa,cACjB,EAAsBC,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYkB,EAAZ,KAEA,OACE,gCACE,sBAAKd,UAAW,MAAhB,UACE,wBAAQA,UAAW,SAAUC,QAAS,kBAAMF,EAAShB,MAArD,eAGA,sBAAMiB,UAAW,cAAjB,SAAiCF,IACjC,wBAAQE,UAAW,SAAUC,QAAS,kBAAMF,EAASd,MAArD,kBAIF,gCACE,uBACEe,UAAW,aACXE,KAAK,SACLrB,MAAOe,EACPO,SAAU,SAACC,GACTU,EAAOV,EAAEE,OAAOzB,UAGpB,wBACEmB,UAAW,SACXC,QAAS,kBAAMF,EAASb,EAAUqB,OAAOX,IAAQ,KAFnD,sC,MC1BO,SAASmB,IACtB,OACE,sBAAKf,UAAU,MAAf,UACE,+CACA,2DACA,cAAC,EAAD,IACA,wDACA,cAAC,EAAD,OCTSgB,kBAAe,CAC5BC,QAAS,CACPxB,QAASyB,KCGPC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAACT,EAAD,QAGJI,I","file":"static/js/main.16936047.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    value: 0\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n    descrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    addAmount: (state, action) => {\r\n      console.log(action);\r\n      state.value += action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { increment, descrement, addAmount } = slice.actions;\r\nexport const selectCount = (state) => state.counter.value;\r\nexport default slice.reducer;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../counter.css\";\r\nimport { addAmount, descrement, increment } from \"../counterSlice\";\r\n\r\nclass CounterClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      add: 5\r\n    };\r\n  }\r\n  render() {\r\n    const { count, dispatch } = this.props;\r\n    const { add } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={\"row\"}>\r\n          <button className=\"button\" onClick={() => dispatch(increment())}>\r\n            +\r\n          </button>\r\n          <span className={\"counterText\"}>{count}</span>\r\n          <button className=\"button\" onClick={() => dispatch(descrement())}>\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className={\"row\"}>\r\n          <div>\r\n            <input\r\n              className={\"amountText\"}\r\n              type=\"number\"\r\n              value={add}\r\n              onChange={(e) => {\r\n                this.setState({ add: e.target.value });\r\n              }}\r\n            ></input>\r\n            <button\r\n              className={\"button\"}\r\n              onClick={() => dispatch(addAmount(Number(add) || 0))}\r\n            >\r\n              Additional Amount\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  count: state.counter.value\r\n});\r\n\r\nexport default connect(mapStateToProps)(CounterClass);\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAmount, descrement, increment, selectCount } from \"../counterSlice\";\r\nimport \"../counter.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [add, setAdd] = useState(5);\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"row\"}>\r\n        <button className={\"button\"} onClick={() => dispatch(increment())}>\r\n          +\r\n        </button>\r\n        <span className={\"counterText\"}>{count}</span>\r\n        <button className={\"button\"} onClick={() => dispatch(descrement())}>\r\n          -\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          className={\"amountText\"}\r\n          type=\"number\"\r\n          value={add}\r\n          onChange={(e) => {\r\n            setAdd(e.target.value);\r\n          }}\r\n        ></input>\r\n        <button\r\n          className={\"button\"}\r\n          onClick={() => dispatch(addAmount(Number(add) || 0))}\r\n        >\r\n          Additional Amount\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Counter;\r\n","import CounterClass from \"./counter/ClassBase/CounterClass\";\nimport Counter from \"./counter/FunctionBase/Counter\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Redux toolkit</h1>\n      <h2> function base component </h2>\n      <Counter />\n      <h2> class base component </h2>\n      <CounterClass />\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../counter/counterSlice\";\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer\r\n  }\r\n});\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store/store\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}